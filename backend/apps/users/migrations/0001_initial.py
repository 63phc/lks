# Generated by Django 2.1.4 on 2018-12-20 19:03

import django.contrib.auth.models
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone
import optimized_image.fields
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('jwt_secret', models.UUIDField(default=uuid.uuid4, verbose_name='jwt_secret')),
                ('account_type', models.CharField(choices=[('AUTHOR', 'Author'), ('MANAGER', 'Manager'), ('CLIENT', 'Client')], max_length=63, verbose_name='Type user')),
                ('username', models.CharField(blank=True, max_length=63, null=True, unique=True, verbose_name='Username')),
                ('avatar', optimized_image.fields.OptimizedImageField(blank=True, null=True, upload_to='', verbose_name='Avatar')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone number')),
                ('country', models.CharField(blank=True, max_length=63, null=True, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=63, null=True, verbose_name='City')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_email_confirmed', models.BooleanField(default=False, verbose_name='Email confirm')),
                ('is_profile_full', models.BooleanField(default=True, verbose_name='Profile full')),
                ('vk_profile', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Vk profile')),
                ('fb_profile', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Fb profile')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
